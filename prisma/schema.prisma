generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod"
  modelCase             = "PascalCase"
  modelSuffix           = "Model"
  prismaJsonNullability = "true"
  relationModel         = "true"
  useDecimalJs          = "true"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
}

enum MoveStyle {
    STATIC
    SPIN
    DYNAMIC
    FLEXIBILITY
    STRENGTH
    STATICSPIN
}

model Move {
  id              Int         @id @default(autoincrement())
  names           MoveName[]
  ipsfCode        String?
  posaCode        String?
  imageUrl        String?
  ipsfTechValue   Float?
  posaTechValue   Float?
  styles          MoveStyle[]
  combos          ComboMove[]
}

model MoveName {
  id      Int    @id @default(autoincrement())
  name    String @unique
  move    Move   @relation(fields: [moveId], references: [id])
  moveId  Int

  @@index([name])
}

model Combo {
  id           Int         @id @default(autoincrement())
  name         String
  movesInCombo ComboMove[]
}

model ComboMove {
  comboId Int
  moveId  Int
  rank    Int
  combo   Combo @relation(fields: [comboId], references: [id])
  move    Move  @relation(fields: [moveId], references: [id])

  @@id([comboId, rank])
}
